/*
 * Customer Service API
 *
 * API for Customer Domain Operations
 *
 * OpenAPI spec version: v1
 * Contact: support@symend.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CustomerTrailApiController : ControllerBase
    { 
        /// <summary>
        /// Get Customer Trail events for an Account by Account Key
        /// </summary>
        /// <remarks>Returns a detailed list of Customer Trail Events for a specific Account, by Account Key</remarks>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="accountKey">This is the account key to be used to return related customer trail events</param>
        /// <param name="searchParameter">Search Parameter</param>
        /// <param name="paging">Paging Criteria</param>
        /// <response code="200">Success</response>
        /// <response code="500">Internal Server Error</response>
        [HttpGet]
        [Route("/customer/v1/accounts/customer-trail-events")]
        [ValidateModelState]
        [SwaggerOperation("GetCustomerEventsByAccountKey")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomerTrailEventPagedModel), description: "Success")]
        [AllowAnonymous]
        public virtual IActionResult GetCustomerEventsByAccountKey([FromHeader][Required()]Guid? xSymOrganizationId, [FromQuery][Required()]string accountKey, [FromQuery]SearchParameter searchParameter, [FromQuery]GuidPagedMetadata paging)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomerTrailEventPagedModel));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{\n  \"data\" : [ {\n    \"name\" : \"name\",\n    \"attributes\" : { },\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"category\" : \"unknown\",\n    \"eventDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"name\" : \"name\",\n    \"attributes\" : { },\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"category\" : \"unknown\",\n    \"eventDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"meta\" : {\n    \"cursor\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\n    \"limit\" : 0,\n    \"orderBy\" : {\n      \"lastValue\" : \"lastValue\",\n      \"attribute\" : \"attribute\"\n    },\n    \"direction\" : \"asc\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<CustomerTrailEventPagedModel>(exampleJson)
                        : default(CustomerTrailEventPagedModel);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
